== Как сделать окно на весь экран? ==

В 1.8 версии движка - никак. Можно установить размеры окна равными размеру экрана, но даже в этом случае при запуске в xulrunner, окно коллапсирует к размерам по умолчанию. Поэтому в 1.8 версии нужно отнимать 1 от размера экрана (тем не менее, на новых версиях движка 1.8, стоит всё же проверить способ и без вычитания единицы, возможно Mozilla наконец-то это починила):

<pre>
<nowiki>
    window.moveTo(0, 0);
    window.resizeTo(screen.width-1, screen.height-1);
</nowiki>
</pre>

В версии 1.9 всё намного лучше, но тоже не идеально, приходится пользоваться таймером:

<pre>
<nowiki>
    setTimeout('window.fullScreen = true;', 1);
</nowiki>
</pre>

== XMLHttpRequest не хочет ходить в сеть, раньше ходил! ==

Сеть в 1.9 по умолчанию находится в режиме «offline» (в 1.8 - в «online»). Поэтому всё что связано с сетью, работать не будет. Нужно принудительно включить режим "online", используя nsIIOService2:

<pre>
<nowiki>
    const mIOService = Components.classes["@mozilla.org/network/io-service;1"]
                                      .getService(Components.interfaces.nsIIOService2);

    try
    {
        mIOService.offline = false;
    }
    catch(ex) { }
</nowiki>
</pre>

== Как сделать UDP Server Socket в JavaScript? ==

[https://bugzilla.mozilla.org/show_bug.cgi?id=433102 Никак]. Если потратить время, можно попытаться написать XPCOM компонент, либо [http://aspn.activestate.com/ASPN/Downloads/Komodo/PyXPCOM/ использовать Python].

== Как получить путь к профайлу пользователя? ==

<pre>
<nowiki>
var path = "";
const mDirService = new Components.Constructor("@mozilla.org/file/directory_service;1","nsIProperties");

try
{ 
    path = (new mDirService()).get("ProfD", Components.interfaces.nsIFile).path; 
}
catch(ex)
{
    alert("Error: \n\n" + ex);
    return; // если внутри функции
}

if(path.search(/\\/) != -1)
    path += "\\";
else
    path += "/";

alert("Profile path: " + path);
</nowiki>
</pre>

== Как записать локальный файл? ==

<pre>
<nowiki>
function save(filepath, data)
{
    var mLocalFile = Components.classes["@mozilla.org/file/local;1"]
                        .createInstance(Components.interfaces.nsILocalFile);

    mLocalFile.initWithPath(filepath);

    if(!mLocalFile.exists())
        mLocalFile.create(Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 420);

    var mFileOutputStream = Components.classes["@mozilla.org/network/file-output-stream;1"]
                                .createInstance( Components.interfaces.nsIFileOutputStream);

    /*
     * Флаги открытия, из исходников XULRunner
     *
     *  #define PR_RDONLY       0x01
     *  #define PR_WRONLY       0x02
     *  #define PR_RDWR         0x04
     *  #define PR_CREATE_FILE  0x08
     *  #define PR_APPEND       0x10
     *  #define PR_TRUNCATE     0x20
     *  #define PR_SYNC         0x40
     *  #define PR_EXCL         0x80
     *
     * Режимы открытия, сходны с правами файлов UNIX, и могут быть
     * проигнорированы на других платформах.
     *
     *   00400   Read by owner
     *   00200   Write by owner
     *   00100   Execute by owner
     *   00040   Read by group
     *   00020   Write by group
     *   00010   Execute by group
     *   00004   Read by others
     *   00002   Write by others
     *   00001   Execute by others
     *
     */
    mFileOutputStream.init(mLocalFile, 0x04 | 0x08 | 0x20, 420, 0);

    mFileOutputStream.write(data, data.length);

    mFileOutputStream.close();
}
</nowiki>
</pre>

== Как прочитать локальный файл? ==

<pre>
<nowiki>
function read(filepath)
{
    var mLocalFile = Components.classes["@mozilla.org/file/local;1"]
                         .createInstance(Components.interfaces.nsILocalFile);

    mLocalFile.initWithPath(filepath);

    if(!mLocalFile.exists())
        return "";

    var mFileInputStream = Components.classes["@mozilla.org/network/file-input-stream;1"]
                               .createInstance(Components.interfaces.nsIFileInputStream);

    // 0x01 - открываем только на чтение
    // 0004 - чтение для всех (аналогично правам файлов в UNIX)
    // null - флаги поведения, не используются
    mFileInputStream.init(mLocalFile, 0x01, 00004, null);

    // для бинарных файлов используем nsIBinaryInputStream
    var mInputStream = Components.classes["@mozilla.org/scriptableinputstream;1"]
                           .createInstance(Components.interfaces.nsIScriptableInputStream);

    mInputStream.init(mFileInputStream);

    return mInputStream.read(mInputStream.available());
}
</nowiki>
</pre>

== Как распарсить формат календаря iCal? ==

Использовать [http://code.google.com/p/kisaragi/source/browse/trunk/src/iCalReader.js?r=13 iCalReader].

== Как сериализовать/десериализовать XML? ==

Имхо, лучший [де]сериализатор - [http://www.kawa.net/works/js/xml/objtree-e.html].

== Как написать клиента погодного сервиса? ==

* Изучаем документацию на [http://developer.yahoo.com/weather/ Yahoo]
* Берём базы международных идентификаторов на [http://www.intellicast.com/FFC/SupportFiles Intellicast]
* Используем XML десериализатор для получения RSS данных о погоде и превращения их в JavaScript объект
* Выводим полученные данные на экран

==Как отключить кеширование в XUL?==

Директивами в Вашем скрипте настроек проекта (defaults/preferences/prefs.js):

<pre>
<nowiki>
pref("nglayout.debug.disable_xul_cache", true);
pref("nglayout.debug.disable_xul_fastload", true);
</nowiki>
</pre>

==Как выводить отладочные сообщения в шелл?==

Директивой в Вашем скрипте настроек проекта (defaults/preferences/prefs.js) разрешить использование dump():

<pre>
<nowiki>
pref("browser.dom.window.dump.enabled", true);
</nowiki>
</pre>

Теперь в коде можно писать

<pre>
<nowiki>
dump("Values: " + a + ", " + b + "\n");
</nowiki>
</pre>

== Как получить favicon из загруженной страницы в &lt;browser&gt;?==

Favicon обычно хранится в html документе как 

<pre>
<nowiki>
<link rel="shortcut icon" href="/images/favicon.png" />
</nowiki>
</pre>

или

<pre>
<nowiki>
<link rel="icon" href="/images/favicon.png" />
</nowiki>
</pre>

Если таких элементов нету, то подразумевается, что favicon по умолчанию расположен на HOST/favicon.ico, где HOST - доменное имя, например «'''google.com'''».

Поэтому алгоритм примерно такой:

<pre>
<nowiki>
function getFavIcon()
{
    var rel;
    var favicon = null;
    var firstIconIndex = -1;

    // получаем массив тегов <link>
    var links = content.document.getElementsByTagName("link");

    for(var i in links)
    {
        if(typeof(links[i].rel) != "undefined")
        {
            rel = links[i].rel.toLowerCase();

            // Отлично, сразу нашли favicon.
            if(rel == "shortcut icon")
            {
                favicon = links[i].href;
                break;
            }
            // Возможно, favicon передаётся как rel="icon". 
            // При этом не прекращаем поиск.
            else if(rel == "icon" && firstIconIndex == -1)
                firstIconIndex = i;
        }
    }

    // Не нашли подходящих тегов с rel="shortcut icon"
    if(!favicon)
    {
        // Возможно, нашли с атрибутом rel="icon"
        if(firstIconIndex != -1)
            favicon = links[firstIconIndex].href;
        else
        {
            var uri = browser.currentURI;

            // Ничего подходящего не нашли.
            // Пробуем загрузить напрямую из HOST/favicon.ico
            try
            {
                favicon = uri.scheme + "://" + uri.host + "/favicon.ico";
            }
            catch(e) { favicon = ""; }
        }
    }

    alert(favicon);
}
</nowiki>
</pre>

Полный XUL проект для демонстрации получения favicon лежит [[Image:example5.tar.bz2 | здесь]] (переименуйте в .tar.bz2). После запуска примера, дождитесь загрузки адреса в браузере, и нажмите кнопку вверху окна. Полученный URL favicon'а передаётся в элемент ''image'', который загружает и отображает иконку. Сам элемент ''image'' расположен слева внизу окна.

==Как внедрить SVG?==

SVG картинка в качестве ''src'' атрибута элементов пока не поддерживается. Можно только внедрить SVG напрямую, вот например несколько ссылок по этому поводу:

* [http://developer.mozilla.org/en/Code_snippets/Embedding_SVG]
* [http://weblogs.mozillazine.org/weirdal/archives/015917.html]
* [http://www.josephguhlin.com/blog/archives/2006/04/28/playing-around-with-xul-and-svg/]
* [http://kb.mozillazine.org/Using_SVG_with_XBL_in_XUL]

==Как создать iconview?==

С помощью HTML элемента ''div''. Не забываем, что для работы HTML элементов нужно импортировать соответствующее пространство имён (''xmlns''):

<pre>
<nowiki>
<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<window
    title="Example"
    width="320"
    height="200"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:html="http://www.w3.org/1999/xhtml">

    <html:div>
        <button label="1" />
        <button label="2" />
        <button label="3" />
        <button label="4" />
        <button label="5" />
        <button label="6" />
        <button label="7" />
        <button label="8" />
    </html:div>

</window>
</nowiki>
</pre>

Чтобы динамически создать объект ''html:div'', необходимо также указать методу ''document.createElementNS()'' необходимое пространство имён:

<pre>
<nowiki>
const XHTML_NS = "http://www.w3.org/1999/xhtml";
var div = document.createElementNS(XHTML_NS, "html:div");
</nowiki>
</pre>

==Что такое Firefox?==

Firefox - это расширяемый плагинами браузер, написанный на XUL, и позволяющий также выполнять локальное и удалённое XUL содержимое (см. [[XUL_Введение | Введение]]). Плагины представляют собой устанавливаемое XUL содержимое.
== Есть ли русскоязычный форум по XUL? ==

[http://xpoint.ru/forums/programming/XUL/forum.xhtml Есть].


[[Category:XUL]]